---
- name: System setup
  hosts: localhost
  become: true
  tasks:

    - name: Check if Rust is installed
      command: rustc --version
      register: rustc_check
      ignore_errors: yes

    - name: Install Rust using rustup if missing
      shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        executable: /bin/bash
      when: rustc_check.rc != 0
      
    - name: Refresh dnf repositories
      dnf:
        update_cache: yes

    - name: Install required packages via DNF
      dnf:
        name:
          - gcc
          - gcc-c++
          - cmake
          - openssl-devel
          - ansible
          - snapper
          - fish
          - git
          - fcitx5-chewing
          - mozc
          - fastfetch
          - vlc
          - helix
          - nmap
        state: present

    - name: Add Flatpak Flathub remote if not exists
      command: flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
      become: false

    - name: Install applications from Flathub
      community.general.flatpak:
        name:
          - com.google.Chrome
          - com.brave.Browser
          - com.discordapp.Discord
          - com.usebottles.bottles
          - com.spotify.Client
        state: present

    - name: Ensure $HOME/.cargo/bin is in PATH for bash
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH="$HOME/.cargo/bin:$PATH"'
        insertafter: EOF
      when: ansible_env.SHELL.endswith('bash')

    - name: Ensure $HOME/.cargo/bin is in PATH for fish
      lineinfile:
        path: "{{ ansible_env.HOME }}/.config/fish/config.fish"
        line: 'set -gx PATH $HOME/.cargo/bin $PATH'
        create: yes
        insertafter: EOF
      when: ansible_env.SHELL.endswith('fish')

    - name: Ensure $HOME/.cargo/bin is in PATH for nushell
      lineinfile:
        path: "{{ ansible_env.HOME }}/.config/nushell/env.nu"
        line: 'let-env PATH = ($env.PATH | prepend [$env.HOME + "/.cargo/bin"])'
        create: yes
        insertafter: EOF
      when: ansible_env.SHELL.endswith('nu')

    - name: Check if Starship is installed
      command: starship --version
      register: starship_check
      ignore_errors: yes

    - name: Install Starship using cargo if missing
      shell: |
        $HOME/.cargo/bin/cargo install starship --locked
      args:
        executable: /bin/bash
      when: starship_check.rc != 0

    - name: Install Oh-My-Posh
      shell: |
        export PATH=$PATH:/home/jellyfish/.local/bin
        curl -s https://ohmyposh.dev/install.sh | bash -s
      args:
        executable: /bin/bash

    - name: Import Microsoft GPG key
      rpm_key:
        state: present
        key: https://packages.microsoft.com/keys/microsoft.asc

    - name: Add Visual Studio Code repo
      copy:
        dest: /etc/yum.repos.d/vscode.repo
        content: |
          [code]
          name=Visual Studio Code
          baseurl=https://packages.microsoft.com/yumrepos/vscode
          enabled=1
          gpgcheck=1
          gpgkey=https://packages.microsoft.com/keys/microsoft.asc
      notify: Update DNF cache

    - name: Install Visual Studio Code
      dnf:
        name: code
        state: present

    - name: Install rclone
      shell: |
        sudo -v
        curl https://rclone.org/install.sh | sudo bash
      args:
        executable: /bin/bash

  handlers:
    - name: Update DNF cache
      command: dnf makecache
